version: "3.9"

volumes:
  langgraph-data:
    driver: local
  langgraph-wal:
    driver: local

services:
  langgraph-redis:
    image: redis:7
    ports: ["6379:6379"]
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 5s
    restart: unless-stopped

  langgraph-postgres:
    image: pgvector/pgvector:pg16
    ports: ["5433:5432"]
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    command:
      - postgres
      - -c
      - shared_preload_libraries=vector
      - -c
      - checkpoint_timeout=15min
      - -c
      - max_wal_size=8GB
      - -c
      - min_wal_size=2GB
      - -c
      - checkpoint_completion_target=0.9
      - -c
      - wal_compression=on
      - -c
      - bgwriter_lru_maxpages=1000
      - -c
      - bgwriter_lru_multiplier=2.0
    volumes:
      - langgraph-data:/var/lib/postgresql/data
      - langgraph-wal:/var/lib/postgresql/data/pgdata/pg_wal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 40         # 여유
      start_period: 30s   # 여유
    restart: unless-stopped

  langgraph-api:
    build:
      context: .
      dockerfile: Dockerfile
    ports: ["8000:8000"]
    depends_on:
      langgraph-redis:
        condition: service_healthy
      langgraph-postgres:
        condition: service_healthy
    environment:
      REDIS_URI: redis://langgraph-redis:6379
      POSTGRES_URI: postgres://postgres:postgres@langgraph-postgres:5432/postgres?sslmode=disable
    env_file:
      - .env.dockerfile
    healthcheck:
      test: ["CMD-SHELL", "python /api/healthcheck.py || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
