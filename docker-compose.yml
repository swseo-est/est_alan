volumes:
  langgraph-data:
    driver: local

services:
  langgraph-redis:
    image: redis:6
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 1s
      retries: 5

  langgraph-postgres:
    image: pgvector/pgvector:pg16
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    command:
      - postgres
      - -c
      - shared_preload_libraries=vector
    volumes:
      - langgraph-data:/var/lib/postgresql/data
      # 비어있는 볼륨에서 최초 1회만 실행됨(초기 확장/스키마)
      - ./db/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER:-postgres} -d $${POSTGRES_DB:-postgres}"]
      interval: 5s
      timeout: 2s
      retries: 20
      start_period: 10s
      start_interval: 1s

  langgraph-api:
    build:
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      langgraph-redis:
        condition: service_healthy
      langgraph-postgres:
        condition: service_healthy
    env_file:
      - .env.dockerfile
    environment:
      # 기본값 제공(새 환경에서도 동작)
      REDIS_URI: ${REDIS_URI:-redis://langgraph-redis:6379}
      POSTGRES_URI: ${POSTGRES_URI:-postgres://postgres:postgres@langgraph-postgres:5432/postgres?sslmode=disable}
    command: ["/bin/bash", "-lc", "/app/entrypoint.sh"]
    healthcheck:
      test: ["CMD-SHELL", "python /api/healthcheck.py"]
      interval: 30s
      timeout: 3s
      retries: 5
      start_period: 10s
      start_interval: 1s
